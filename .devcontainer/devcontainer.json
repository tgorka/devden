// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.187.0/containers/python-3
// https://intellij-support.jetbrains.com/hc/en-us/community/posts/19485533579794-Trying-to-use-Dev-Containers-IDE-Backend-keeps-re-downloading-but-never-installs
{
	"name": "devden-0.0.4",
	"dockerComposeFile": "compose.yaml",
	"service": "devden-service-0.0.4",
	"workspaceFolder": "/workspace/devden",

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "pip3 install --user -r requirements.txt",
	// prevent git ownership
	"postCreateCommand": "echo 'source ${NVM_DIR}/nvm.sh' >> ~/.bashrc && echo 'eval \"$(pyenv init -)\"' >> ~/.bashrc && echo 'export BUN_INSTALL=\"/usr/local/share/bun\" && export PATH=\"$BUN_INSTALL/bin:$PATH\"' >> ~/.bashrc",
	"postStartCommand": {
		"docker": "sudo chown -Rf ${remoteUser}:${remoteUser} /var/run/docker.sock",
		"git": "git config --global --add safe.directory ${containerWorkspaceFolder}",
		"git-user-name": "git config --global user.name \"tgorka\"",
		"git-user-email": "git config --global user.email \"tomasz@gorka.org.pl\""
	},

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"remoteEnv": {
		"NVM_DIR": "/usr/local/share/nvm",
		"PYENV_ROOT": "/usr/local/pyenv",
		"BUN_INSTALL": "/usr/local/share/bun",
		"PATH": "${containerEnv:PATH}:${containerEnv:NVM_DIR}/versions/node/v20/bin:${containerEnv:PYENV_ROOT}/shims:${containerEnv:BUN_INSTALL}/bin:/usr/local/bin"
	},
	"customizations": {
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"terminal.integrated.defaultProfile.linux": "bash",
				"terminal.integrated.profiles.linux": {
					"bash": {
						"path": "/bin/bash"
					}
				},
				"python.defaultInterpreterPath": "/usr/local/pyenv/shims/python",
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": true,
				"python.formatting.provider": "black",
				"editor.formatOnSave": true,
				"editor.codeActionsOnSave": {
					"source.fixAll.eslint": "explicit"
				}
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"github.vscode-pull-request-github",
				"github.vscode-github-actions",
				"github.remotehub",
				"eamodio.gitlens",
				"ms-azuretools.vscode-docker",
				"ms-python.python",
				"ms-python.debugpy",
				"ms-python.vscode-pylance",
				"ms-python.pylint",
				"ms-python.autopep8",
				"visualstudioexptteam.vscodeintellicode",
				"visualstudioexptteam.intellicode-api-usage-examples",
				"redhat.vscode-yaml",
				"jerrygoyal.shortcut-menu-bar",
				"ms-kubernetes-tools.vscode-kubernetes-tools",
				"esbenp.prettier-vscode",
				"donjayamanne.typescript-notebook",
				"shd101wyy.markdown-preview-enhanced",
				"dbaeumer.vscode-eslint",
				"oven.bun-vscode",
				"ms-vscode.vscode-typescript-next",
				"christian-kohler.path-intellisense",
				"aaron-bond.better-comments",
				"streetsidesoftware.code-spell-checker",
				"usernamehw.errorlens",
				"wix.vscode-import-cost",
				"yzhang.markdown-all-in-one",
				"bierner.markdown-emoji",
				"donjayamanne.githistory",
				"editorconfig.editorconfig",
				"rust-lang.rust-analyzer",
				"golang.go",
				"vscjava.vscode-java-pack",
				"mikestead.dotenv",
				"zxh404.vscode-proto3"
			]
		}
	},
	"features": {
		"ghcr.io/devcontainers/features/docker-in-docker:2": {},
		"ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {},
		"ghcr.io/devcontainers-contrib/features/zsh-plugins:0": {
			"plugins": "git z zsh-syntax-highlighting zsh-autosuggestions",
			"omzPlugins": "https://github.com/zsh-users/zsh-syntax-highlighting https://github.com/zsh-users/zsh-autosuggestions"
		}
	}
}
